version: '3.8'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.5.0'
    container_name: alicpp-zookeeper
    ports:
      - '2181:2181'
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      start_period: 10s
      retries: 20
      interval: 10s
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: 'confluentinc/cp-server:7.5.0'
    container_name: alicpp-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
      - '9101:9101'
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  schema-registry:
    image: 'confluentinc/cp-schema-registry:7.5.0'
    container_name: alicpp-schema-registry
    depends_on:
      - broker
    ports:
      - '8082:8081'
    healthcheck:
      start_period: 10s
      interval: 10s
      retries: 20
      test: >-
        curl --user superUser:superUser --fail --silent --insecure
        http://localhost:8081/subjects --output /dev/null || exit 1
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'

  control-center:
    image: 'confluentinc/cp-enterprise-control-center:7.5.0'
    container_name: alicpp-control-center
    depends_on:
      broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - '9021:9021'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9021/healthcheck'
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'debezium:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: /connectors
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1

  kafka_producer:
    build:
      context: kafka_producer
      dockerfile: kafka_producer/Dockerfile
    depends_on:
      broker:
        condition: service_healthy
      # postgresql:
      #   condition: service_healthy
    container_name: alicpp-kafka-producer
